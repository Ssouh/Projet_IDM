[comment encoding = UTF-8 /]
[module toNET('http://petrinet')]
[comment Generation de la syntaxe .net à partir d'un modèle de réseau de pétri /]

[template public petrinetToNET(aPetriNet : PetriNet)]
[comment @main/]
[file (aPetriNet.name.concat('.net'), false, 'UTF-8')]
[for (tr : Transition | aPetriNet.noeud->getTransitions())]
tr [tr.name/][tr.getTransitionsPredecessors()/] ->[tr.getTransitionsSuccessors()/]
[/for]
[for (pl : Place | aPetriNet.noeud->getPlaces())]
[if (pl.jeton > 0)]pl [pl.name/] ([pl.jeton/])[/if]
[/for]
net [aPetriNet.name/]
[/file]
[/template]

[query public getTransitions(elements : OrderedSet(Noeud)) : OrderedSet(Transition) = 
	elements->select( e | e.oclIsTypeOf(Transition) )
		->collect( e | e.oclAsType(Transition) )
		->asOrderedSet()
/]

[query public getPlaces(elements : OrderedSet(Noeud)) : OrderedSet(Place) = 
	elements->select( e | e.oclIsTypeOf(Place) )
		->collect( e | e.oclAsType(Place) )
		->select( e | e.jeton > 0 )
		->asOrderedSet()
/]

[template public getTransitionsPredecessors(tr : Transition)]
[for (arc : Arc | tr.outgoing)] [arc.getPredecessorPlace()/][/for]
[/template]

[template public getTransitionsSuccessors(tr : Transition)]
[for (arc : Arc | tr.ingoing)] [arc.getSuccessorPlace()/][/for]
[/template]

[template public getPredecessorPlace(arc : Arc)]
[arc.source.name/][if (arc.type=ArcType::simple)]?[arc.poid/][elseif (arc.poid > 1)]*[arc.poid/][/if]
[/template]

[template public getSuccessorPlace(arc : Arc)]
[arc.target.name/][if (arc.poid > 1)]*[arc.poid/][/if]
[/template]


