[comment encoding = UTF-8 /]
[module toTina('http://petriNet')]


[template public totina(aPetriNet : PetriNet)]
[comment @main/]
[file (aPetriNet.name.concat('.net'), false, 'UTF-8')]
net [aPetriNet.name/]
[for (p : Place | aPetriNet.petriElts->getPlaces())]
	pl [p.name/] ([p.nbJetons/])
[/for]
[for (t : Transition | aPetriNet.petriElts->getTransitions())]
	tr [t.name/] [for (a : Arc | aPetriNet.arcs)][if(a.sortie = t)][a.entree.name/][getArcType(a)/] [/if][/for]-> [for (a : Arc | aPetriNet.arcs)][if(a.entree = t)][a.sortie.name/][getArcType(a)/] [/if][/for]
[/for]
[/file]
[/template]


[query public getPlaces(elements : OrderedSet(PetriElt)) : OrderedSet(Place) = 
	elements->select( e | e.oclIsTypeOf(Place) )
		->collect( e | e.oclAsType(Place) )
		->asOrderedSet()
/]

[query public getTransitions(elements : OrderedSet(PetriElt)) : OrderedSet(Transition) = 
	elements->select( e | e.oclIsTypeOf(Transition) )
		->collect( e | e.oclAsType(Transition) )
		->asOrderedSet()
/]

[template public getArcType(arc : Arc)]
[if (arc.type = ArcType::normal and arc.poids > 1)]
*[arc.poids/][elseif (arc.type = ArcType::readArc)]
?[arc.poids/][/if]
[/template]